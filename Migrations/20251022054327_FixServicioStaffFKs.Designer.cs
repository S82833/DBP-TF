// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoDBP.Datos;

#nullable disable

namespace ProyectoDBP.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20251022054327_FixServicioStaffFKs")]
    partial class FixServicioStaffFKs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoDBP.Models.Cita", b =>
                {
                    b.Property<int>("IdCita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCita"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int");

                    b.Property<int>("IdStaffMedico")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdCita");

                    b.HasIndex("IdServicio");

                    b.HasIndex("IdStaffMedico");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("ProyectoDBP.Models.DoctorDisponibilidad", b =>
                {
                    b.Property<int>("IdDoctorDisponibilidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDoctorDisponibilidad"));

                    b.Property<string>("DiaSemana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraFin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraInicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdStaffMedico")
                        .HasColumnType("int");

                    b.HasKey("IdDoctorDisponibilidad");

                    b.HasIndex("IdStaffMedico");

                    b.ToTable("DoctorDisponibilidades");
                });

            modelBuilder.Entity("ProyectoDBP.Models.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServicio"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdServicio");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("ProyectoDBP.Models.ServicioStaff", b =>
                {
                    b.Property<int>("IdServiciosStaff")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServiciosStaff"));

                    b.Property<int>("IdServicio")
                        .HasColumnType("int");

                    b.Property<int>("IdStaffMedico")
                        .HasColumnType("int");

                    b.HasKey("IdServiciosStaff");

                    b.HasIndex("IdStaffMedico");

                    b.HasIndex("IdServicio", "IdStaffMedico")
                        .IsUnique();

                    b.ToTable("ServiciosStaff");
                });

            modelBuilder.Entity("ProyectoDBP.Models.StaffMedico", b =>
                {
                    b.Property<int>("IdStaffMedico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStaffMedico"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biografia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStaffMedico");

                    b.ToTable("StaffMedico");
                });

            modelBuilder.Entity("ProyectoDBP.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Alergias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Antecedentes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AntecedentesFam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ocupacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoEmergencia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProyectoDBP.Models.Cita", b =>
                {
                    b.HasOne("ProyectoDBP.Models.Servicio", "Servicio")
                        .WithMany("Citas")
                        .HasForeignKey("IdServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDBP.Models.StaffMedico", "StaffMedico")
                        .WithMany("Citas")
                        .HasForeignKey("IdStaffMedico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDBP.Models.Usuario", "Usuario")
                        .WithMany("Citas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Servicio");

                    b.Navigation("StaffMedico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoDBP.Models.DoctorDisponibilidad", b =>
                {
                    b.HasOne("ProyectoDBP.Models.StaffMedico", "StaffMedico")
                        .WithMany("Disponibilidades")
                        .HasForeignKey("IdStaffMedico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StaffMedico");
                });

            modelBuilder.Entity("ProyectoDBP.Models.ServicioStaff", b =>
                {
                    b.HasOne("ProyectoDBP.Models.Servicio", "Servicio")
                        .WithMany("ServiciosStaff")
                        .HasForeignKey("IdServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDBP.Models.StaffMedico", "StaffMedico")
                        .WithMany("ServiciosStaff")
                        .HasForeignKey("IdStaffMedico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Servicio");

                    b.Navigation("StaffMedico");
                });

            modelBuilder.Entity("ProyectoDBP.Models.Servicio", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("ServiciosStaff");
                });

            modelBuilder.Entity("ProyectoDBP.Models.StaffMedico", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("Disponibilidades");

                    b.Navigation("ServiciosStaff");
                });

            modelBuilder.Entity("ProyectoDBP.Models.Usuario", b =>
                {
                    b.Navigation("Citas");
                });
#pragma warning restore 612, 618
        }
    }
}
